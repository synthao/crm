version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    volumes:
      - ${ZOOKEEPER_DATA}:/var/lib/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER="yes"
    volumes:
      - ${KAFKA_DATA}:/var/lib/kafka/data
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  database_orders:
    env_file:
      - .env
    container_name: database_orders
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DB_ORDERS_NAME}
      - POSTGRES_USER=${DB_ORDERS_USER}
      - POSTGRES_PASSWORD=${DB_ORDERS_PASSWORD}
    volumes:
      - ${DB_ORDERS_VOLUME_PATH}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$DB_ORDERS_USER", "-d", "$DB_ORDERS_NAME" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database_users:
    container_name: database_users
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_USERS_NAME}
      POSTGRES_USER: ${DB_USERS_USER}
      POSTGRES_PASSWORD: ${DB_USERS_PASSWORD}
    volumes:
      - ${DB_USERS_VOLUME_PATH}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$DB_USERS_USER", "-d", "$DB_USERS_NAME" ]
      interval: 10s
      timeout: 5s
      retries: 5

  orders: &orders
    profiles:
      - remote
    container_name: orders
    image: synthao/orders:latest
    environment:
      DB_HOST: ${DB_ORDERS_HOST}
      DB_USER: ${DB_ORDERS_USER}
      DB_PASSWORD: ${DB_ORDERS_PASSWORD}
      DB_NAME: ${DB_ORDERS_NAME}
      KAFKA_ADDRESS: ${KAFKA_ADDRESS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
    ports:
      - "4000:4000"
    depends_on:
      database_orders:
        condition: service_healthy
      kafka:
        condition: service_started

  notifier: &notifier
    profiles:
      - remote
    container_name: notifier
    image: synthao/notifier:latest
    environment:
      APP_NAME_NOTIFIER: ${APP_NAME_NOTIFIER}
      KAFKA_ADDRESS: ${KAFKA_ADDRESS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
    ports:
      - "4001:4001"
    depends_on:
      - kafka

  users: &users
    profiles:
      - remote
    container_name: users
    image: synthao/users:latest
    environment:
      DB_HOST: ${DB_USERS_HOST}
      DB_USER: ${DB_USERS_USER}
      DB_PASSWORD: ${DB_USERS_PASSWORD}
      DB_NAME: ${DB_USERS_NAME}
    ports:
      - "4002:4002"
    depends_on:
      database_users:
        condition: service_healthy

  orders-local:
    <<: *orders
    env_file:
      - .env
    container_name: orders_local
    profiles:
      - local
    build: ${DOCKER_IMAGE_ORDERS}

  notifier-local:
    <<: *notifier
    container_name: notifier_local
    profiles:
      - local
    build: ${DOCKER_IMAGE_NOTIFIER}

  users-local:
    <<: *users
    env_file:
      - .env
    container_name: users_local
    profiles:
      - local
    build: ${DOCKER_IMAGE_USERS}

volumes:
  zookeeper_data:
  kafka_data:
  pg_data:
